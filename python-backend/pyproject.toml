[tool.poetry]
name = "doctor-gpt-backend"
version = "1.0.0"
description = "Advanced medical AI assistant backend with multi-model reasoning, RAG, and healthcare focus"
authors = ["Doctor GPT Team <team@doctorgpt.ai>"]
license = "MIT"
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
psycopg2-binary = "^2.9.7"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
langchain = "^0.1.0"
langchain-openai = "^0.0.2"
langchain-anthropic = "^0.1.0"
langchain-community = "^0.0.10"
langchain-core = "^0.1.8"
litellm = "^1.17.9"
qdrant-client = "^1.7.0"
httpx = "^0.25.2"
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
pyjwt = {extras = ["crypto"], version = "^2.8.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
redis = "^5.0.1"
celery = "^5.3.4"
tenacity = "^8.2.3"
asyncio = "^3.4.3"
aiofiles = "^23.2.1"
pytesseract = "^0.3.10"
Pillow = "^10.1.0"
opencv-python = "^4.8.1"
python-magic = "^0.4.27"
pypdf2 = "^3.0.1"
openpyxl = "^3.1.2"
python-docx = "^1.1.0"
markdown = "^3.5.1"
beautifulsoup4 = "^4.12.2"
lxml = "^4.9.3"
numpy = "^1.25.2"
pandas = "^2.1.4"
scikit-learn = "^1.3.2"
matplotlib = "^3.8.2"
seaborn = "^0.13.0"
plotly = "^5.17.0"
streamlit = "^1.28.2"
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
sentry-sdk = {extras = ["fastapi"], version = "^1.39.1"}
orjson = "^3.9.10"
email-validator = "^2.1.0"
phonenumbers = "^8.13.25"
tzdata = "^2023.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.6.0"
httpx = "^0.25.2"
pytest-mock = "^3.12.0"
factory-boy = "^3.3.0"
faker = "^20.1.0"
pytest-xdist = "^3.5.0"
coverage = "^7.3.2"

[tool.poetry.group.test.dependencies]
pytest-benchmark = "^4.0.0"
locust = "^2.17.0"
memory-profiler = "^0.61.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pdf_parse.*",
    "pytesseract.*",
    "cv2.*",
    "magic.*",
    "docx.*",
    "openpyxl.*",
    "qdrant_client.*",
    "langchain.*",
    "anthropic.*",
    "openai.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
